{"ast":null,"code":"import _classCallCheck from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/All.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nvar All =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(All, _Component);\n\n  _createClass(All, [{\n    key: \"getData\",\n    value: function getData() {\n      var getRequest = {\n        request: [{\n          queryType: \"filterCategory\",\n          args: \"All\"\n        }]\n      };\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"GET\", \"http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009\", true);\n      xhttp.send(\"filterCategory\" + \"All\");\n\n      xhttp.onload = function () {\n        var result = xhttp.responseText;\n      };\n\n      fetch('http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009', {\n        mode: 'no-cors'\n      }, {\n        method: 'GET',\n        body: JSON.stringify(getRequest) //      this.setState({data: response}),\n\n      }).then(function (response) {\n        return response.json();\n      });\n    } //Fetch which will get the data and set the state to the response, need to update constantly\n    //fetch('http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009', {mode: 'no-cors'}, {\n    //      method: 'GET',\n    //      this.setState(response),\n    //    });\n\n  }]);\n\n  function All() {\n    var _this;\n\n    _classCallCheck(this, All);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(All).call(this)); //mock json must now have querytype filtercategory to send to backend\n\n    _this.state = {\n      data: [//queryType : \"filterCategory\",\n      {\n        user: \"byrrice\",\n        post_content: \"CSGO 5 queue at 3\",\n        category: \"Videogames\"\n      }, {\n        user: \"niknak\",\n        post_content: \"Basketball at 6 at Veale\",\n        category: \"Sports\"\n      }, {\n        user: \"vishthefish\",\n        post_content: \"Coding group for 293?\",\n        category: \"Misc\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(All, [{\n    key: \"render\",\n    value: function render() {\n      var tabData = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"allContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Get Data\"), React.createElement(ListGroup, {\n        className: \"All\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.data.map(function (data) {\n        return React.createElement(ListGroupItem, {\n          key: data.user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, data.user, \": \", data.post_content, \" \");\n      })));\n    }\n  }]);\n\n  return All;\n}(Component);\n\nexport default All;","map":{"version":3,"sources":["/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/All.js"],"names":["React","Component","ListGroup","ListGroupItem","Button","All","getRequest","request","queryType","args","xhttp","XMLHttpRequest","open","send","onload","result","responseText","fetch","mode","method","body","JSON","stringify","then","response","json","state","data","user","post_content","category","tabData","getData","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,iBAAvC;AACA,SAAQC,MAAR,QAAqB,iBAArB;;IAGMC,G;;;;;;;8BAEG;AACL,UAAIC,UAAU,GAAG;AACbC,QAAAA,OAAO,EACP,CACI;AACAC,UAAAA,SAAS,EAAE,gBADX;AAEAC,UAAAA,IAAI,EAAE;AAFN,SADJ;AAFa,OAAjB;AASA,UAAIC,KAAK,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,IAAN,CAAW,KAAX,EAAkB,+DAAlB,EAAmF,IAAnF;AACAF,MAAAA,KAAK,CAACG,IAAN,CAAW,mBAAmB,KAA9B;;AACAH,MAAAA,KAAK,CAACI,MAAN,GAAe,YAAY;AACzB,YAAIC,MAAM,GAAGL,KAAK,CAACM,YAAnB;AACD,OAFD;;AAGAC,MAAAA,KAAK,CAAC,+DAAD,EAAkE;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAlE,EAAqF;AACxFC,QAAAA,MAAM,EAAE,KADgF;AAExFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,UAAf,CAFkF,CAG9F;;AAH8F,OAArF,CAAL,CAKCiB,IALD,CAKM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OALd;AAMH,K,CAED;AACA;AACA;AACA;AACA;;;;AAGC,iBAAa;AAAA;;AAAA;;AACT,8EADS,CAEP;;AACD,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACE;AACJ;AACIC,QAAAA,IAAI,EAAC,SADT;AAEIC,QAAAA,YAAY,EAAE,mBAFlB;AAGIC,QAAAA,QAAQ,EAAE;AAHd,OAFE,EAOF;AACIF,QAAAA,IAAI,EAAC,QADT;AAEIC,QAAAA,YAAY,EAAE,0BAFlB;AAGIC,QAAAA,QAAQ,EAAE;AAHd,OAPE,EAYF;AACIF,QAAAA,IAAI,EAAC,aADT;AAEIC,QAAAA,YAAY,EAAE,uBAFlB;AAGIC,QAAAA,QAAQ,EAAE;AAHd,OAZE;AADK,KAAb;AAHQ;AAuBV;;;;6BAEO;AAEP,UAAMC,OAAO,GAAG,KAAKL,KAAL,CAAWC,IAA3B;AACA,aACI;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAG,SAAlB;AAA4B,QAAA,OAAO,EAAI,KAAKK,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGM,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoB,UAASN,IAAT,EAAe;AACjC,eAAO,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAEA,IAAI,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCD,IAAI,CAACC,IAArC,QAA6CD,IAAI,CAACE,YAAlD,MAAP;AACD,OAFD,CAHN,CAFA,CADJ;AAcD;;;;EA3Ee5B,S;;AA8ElB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport {ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {Button} from 'react-bootstrap';\n\n\nclass All extends Component {\n\ngetData(){\n    var getRequest = {\n        request :\n        [\n            {\n            queryType: \"filterCategory\",\n            args: \"All\"\n            }\n        ]\n    };\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"GET\", \"http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009\", true);\n    xhttp.send(\"filterCategory\" + \"All\")\n    xhttp.onload = function () {\n      var result = xhttp.responseText;\n    };\n    fetch('http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009', {mode: 'no-cors'}, {\n      method: 'GET',\n      body: JSON.stringify(getRequest)\n//      this.setState({data: response}),\n    })\n    .then(response => response.json());\n}\n\n//Fetch which will get the data and set the state to the response, need to update constantly\n//fetch('http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009', {mode: 'no-cors'}, {\n//      method: 'GET',\n//      this.setState(response),\n//    });\n\n\n constructor(){\n     super()\n       //mock json must now have querytype filtercategory to send to backend\n      this.state = {\n        data: [\n                //queryType : \"filterCategory\",\n            {\n                user:\"byrrice\",\n                post_content: \"CSGO 5 queue at 3\",\n                category: \"Videogames\"\n            },\n            {\n                user:\"niknak\",\n                post_content: \"Basketball at 6 at Veale\",\n                category: \"Sports\"\n            },\n            {\n                user:\"vishthefish\",\n                post_content: \"Coding group for 293?\",\n                category: \"Misc\"\n            }\n        ]\n       };\n   }\n\n  render() {\n\n    const tabData = this.state.data;\n    return (\n        <div className = \"allContainer\">\n        <Button bsStyle = \"primary\" onClick = {this.getData}>Get Data</Button>\n        <ListGroup className=\"All\">\n\n            {\n              this.state.data.map(function(data) {\n                return <ListGroupItem key={data.user}>{data.user}: {data.post_content} </ListGroupItem>\n              })\n            }\n          </ListGroup>\n          </div>\n\n    );\n  }\n}\n\nexport default All;"]},"metadata":{},"sourceType":"module"}