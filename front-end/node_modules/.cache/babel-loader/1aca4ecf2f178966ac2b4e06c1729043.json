{"ast":null,"code":"import _classCallCheck from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/Sports.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap'; //does searching by category for now\n\nfunction searchingFor(term) {\n  return function (x) {\n    return x.post_content.toLowerCase().includes(term.toLowerCase()) || !term;\n  };\n}\n\nvar Sports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sports, _Component);\n\n  _createClass(Sports, [{\n    key: \"componentDidMount\",\n\n    /*\n            <ListGroup className=\"Sports\">\n            <Button bsStyle = \"primary\" onClick = {this.getData}>Refresh</Button>\n                {\n                  this.state.data.map(function(data) {\n                    return <ListGroupItem key={data.user}>{data.user}: {data.post_content} </ListGroupItem>\n                  })\n                }\n              </ListGroup>\n    */\n    //On startup\n    value: function componentDidMount() {\n      this.setState({\n        data: [//queryType : \"filterCategory\",\n        {\n          user: \"byrrice\",\n          post_content: \"Ping Pong Club at 7 pm\"\n        }, {\n          user: \"niknak\",\n          post_content: \"Basketball at 6 at Veale\"\n        }, {\n          user: \"vishthefish\",\n          post_content: \"Tennis at 7 pm\"\n        }]\n      });\n    } //On click refresh, will reload data to include new posts\n\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var getRequest = {\n        request: [{\n          queryType: \"filterCategory\",\n          args: \"All\"\n        }]\n      };\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"GET\", \"http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009\", true);\n      xhttp.send(\"filterCategory\" + \"All\");\n\n      xhttp.onload = function () {\n        var result = xhttp.responseText;\n        this.setState(result);\n      };\n    }\n  }]);\n\n  function Sports(props) {\n    var _this;\n\n    _classCallCheck(this, Sports);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sports).call(this, props)); //mock json must now have querytype filtercategory to send to backend\n\n    _this.state = {\n      data: [],\n      term: ''\n    };\n    _this.searchHandler = _this.searchHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Sports, [{\n    key: \"searchHandler\",\n    value: function searchHandler(event) {\n      this.setState({\n        term: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          term = _this$state.term,\n          data = _this$state.data;\n      return React.createElement(\"div\", {\n        className: \"result-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Refresh\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.searchHandler,\n        value: term,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), data.filter(searchingFor(term)).map(function (data) {\n        return React.createElement(\"div\", {\n          key: data.user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"list-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, data.user, \" |\", data.post_content))));\n      }));\n    }\n  }]);\n\n  return Sports;\n}(Component);\n\nexport default Sports;","map":{"version":3,"sources":["/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/Sports.js"],"names":["React","Component","ListGroup","ListGroupItem","Button","searchingFor","term","x","post_content","toLowerCase","includes","Sports","setState","data","user","getRequest","request","queryType","args","xhttp","XMLHttpRequest","open","send","onload","result","responseText","props","state","searchHandler","bind","event","target","value","getData","filter","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {Button} from 'react-bootstrap';\n\n//does searching by category for now\nfunction searchingFor(term){\n    return function(x){\n        return x.post_content.toLowerCase().includes(term.toLowerCase()) || !term;\n    }\n}\nclass Sports extends Component {\n\n    /*\n            <ListGroup className=\"Sports\">\n            <Button bsStyle = \"primary\" onClick = {this.getData}>Refresh</Button>\n                {\n                  this.state.data.map(function(data) {\n                    return <ListGroupItem key={data.user}>{data.user}: {data.post_content} </ListGroupItem>\n                  })\n                }\n              </ListGroup>\n\n*/\n    //On startup\n    componentDidMount() {\n        this.setState({\n            data: [\n                //queryType : \"filterCategory\",\n                {\n                    user:\"byrrice\",\n                    post_content: \"Ping Pong Club at 7 pm\",\n                },\n                {\n                    user:\"niknak\",\n                    post_content: \"Basketball at 6 at Veale\",\n                },\n                {\n                    user:\"vishthefish\",\n                    post_content: \"Tennis at 7 pm\",\n                }\n            ]\n        });\n    }\n\n    //On click refresh, will reload data to include new posts\n    getData() {\n        var getRequest = {\n            request: [{\n                queryType: \"filterCategory\",\n                args: \"All\"\n            }]\n        };\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"GET\", \"http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009\", true);\n        xhttp.send(\"filterCategory\" + \"All\")\n        xhttp.onload = function() {\n            var result = xhttp.responseText;\n            this.setState(result);\n        };\n    }\n\n\n\n constructor(props){\n     super(props)\n     //mock json must now have querytype filtercategory to send to backend\n       this.state = {\n         data: [\n                ],\n         term: '',\n       }\n        this.searchHandler = this.searchHandler.bind(this);\n    }\n  searchHandler(event){\n      this.setState({term: event.target.value})\n    }\n    render() {\n      const{term, data} = this.state;\n    return (\n    <div className=\"result-container\">\n                        <Button bsStyle = \"primary\" onClick = {this.getData}>Refresh</Button>\n                           <form>\n                               <input type = \"text\"\n                                   onChange ={this.searchHandler}\n                                   value = {term}\n                               />\n                           </form>\n                  {\n                    data.filter(searchingFor(term)).map(data =>\n                        <div key = {data.user}>\n                              <center>\n                                    <ul className = \"list-group\">\n                                        <li className = \"list-group-item\">\n                                            {data.user} |\n                                            {data.post_content}\n                                        </li>\n                                     </ul>\n                              </center>\n\n                        </div>\n                    )\n                  }\n                  </div>\n\n    );\n  }\n}\n\nexport default Sports;"]},"metadata":{},"sourceType":"module"}