{"ast":null,"code":"import _classCallCheck from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/All.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap'; //does searching by category for now\n\nfunction searchingFor(term) {\n  return function (x) {\n    return x.post_content.toLowerCase().includes(term.toLowerCase()) || !term;\n  };\n}\n\nvar All =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(All, _Component);\n\n  _createClass(All, [{\n    key: \"componentDidMount\",\n\n    /* <div className = \"allContainer\">\n     <ListGroup className=\"All\">\n         {\n          this.state.data.map(function(data) {\n            return <ListGroupItem key={data.user}>{data.user}: {data.post_content} </ListGroupItem>\n          })\n        }\n      </ListGroup>\n      </div>\n      */\n    //On startup\n    value: function componentDidMount() {\n      this.setState({\n        data: [//queryType : \"filterCategory\",\n        {\n          user: \"byrrice\",\n          post_content: \"CSGO 5 queue at 3\",\n          category: \"Videogames\"\n        }, {\n          user: \"niknak\",\n          post_content: \"Basketball at 6 at Veale\",\n          category: \"Sports\"\n        }, {\n          user: \"vishthefish\",\n          post_content: \"Coding group for 293?\",\n          category: \"Misc\"\n        }]\n      });\n    } //On click refresh, will reload data to include new posts\n\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var getRequest = {\n        request: [{\n          queryType: \"filterCategory\",\n          args: \"All\"\n        }]\n      };\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"GET\", \"http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009\", true);\n      xhttp.send(\"filterCategory\" + \"All\");\n\n      xhttp.onload = function () {\n        var result = xhttp.responseText;\n        this.setState(result);\n      };\n    } //    fetch('http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009', {mode: 'no-cors'}, {\n    //      method: 'GET',\n    //      body: JSON.stringify(getRequest)\n    ////      this.setState({data: response}),\n    //    })\n    //    .then(response => response.json());\n    //}\n    //Fetch which will get the data and set the state to the response, need to update constantly\n    //fetch('http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009', {mode: 'no-cors'}, {\n    //      method: 'GET',\n    //      this.setState(response),\n    //    });\n\n  }]);\n\n  function All(props) {\n    var _this;\n\n    _classCallCheck(this, All);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(All).call(this, props)); //mock json must now have querytype filtercategory to send to backend\n\n    _this.state = {\n      data: [],\n      term: ''\n    };\n    _this.searchHandler = _this.searchHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(All, [{\n    key: \"searchHandler\",\n    value: function searchHandler(event) {\n      this.setState({\n        term: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          term = _this$state.term,\n          data = _this$state.data;\n      return React.createElement(\"div\", {\n        className: \"result-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Refresh\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.searchHandler,\n        value: term,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), data.filter(searchingFor(term)).map(function (data) {\n        return React.createElement(\"div\", {\n          key: data.user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"list-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, data.user, \" |\", data.post_content, \" |\", data.category))));\n      }));\n    }\n  }]);\n\n  return All;\n}(Component);\n\nexport default All;","map":{"version":3,"sources":["/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/All.js"],"names":["React","Component","ListGroup","ListGroupItem","Button","searchingFor","term","x","post_content","toLowerCase","includes","All","setState","data","user","category","getRequest","request","queryType","args","xhttp","XMLHttpRequest","open","send","onload","result","responseText","props","state","searchHandler","bind","event","target","value","getData","filter","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {Button} from 'react-bootstrap';\n\n//does searching by category for now\nfunction searchingFor(term){\n    return function(x){\n        return x.post_content.toLowerCase().includes(term.toLowerCase()) || !term;\n    }\n}\n\nclass All extends Component {\n\n    /* <div className = \"allContainer\">\n\n    <ListGroup className=\"All\">\n\n        {\n          this.state.data.map(function(data) {\n            return <ListGroupItem key={data.user}>{data.user}: {data.post_content} </ListGroupItem>\n          })\n        }\n      </ListGroup>\n      </div>\n      */\n    //On startup\n    componentDidMount() {\n        this.setState({\n            data: [\n                //queryType : \"filterCategory\",\n                {\n                    user: \"byrrice\",\n                    post_content: \"CSGO 5 queue at 3\",\n                    category: \"Videogames\"\n                },\n                {\n                    user: \"niknak\",\n                    post_content: \"Basketball at 6 at Veale\",\n                    category: \"Sports\"\n                },\n                {\n                    user: \"vishthefish\",\n                    post_content: \"Coding group for 293?\",\n                    category: \"Misc\"\n                }\n            ]\n        });\n    }\n\n    //On click refresh, will reload data to include new posts\n    getData() {\n        var getRequest = {\n            request: [{\n                queryType: \"filterCategory\",\n                args: \"All\"\n            }]\n        };\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"GET\", \"http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009\", true);\n        xhttp.send(\"filterCategory\" + \"All\")\n        xhttp.onload = function() {\n            var result = xhttp.responseText;\n            this.setState(result);\n        };\n    }\n    //    fetch('http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009', {mode: 'no-cors'}, {\n    //      method: 'GET',\n    //      body: JSON.stringify(getRequest)\n    ////      this.setState({data: response}),\n    //    })\n    //    .then(response => response.json());\n    //}\n\n    //Fetch which will get the data and set the state to the response, need to update constantly\n    //fetch('http://ec2-18-191-25-105.us-east-2.compute.amazonaws.com:6009', {mode: 'no-cors'}, {\n    //      method: 'GET',\n    //      this.setState(response),\n    //    });\n\n\n    constructor(props) {\n        super(props);\n                //mock json must now have querytype filtercategory to send to backend\n        this.state = {\n            data: [\n            ],\n            term: '',\n        }\n        this.searchHandler = this.searchHandler.bind(this);\n    }\n\n  searchHandler(event){\n    this.setState({term: event.target.value})\n  }\n  render() {\n    const{term, data} = this.state;\n    return (\n        <div className=\"result-container\">\n                    <Button bsStyle = \"primary\" onClick = {this.getData}>Refresh</Button>\n                       <form>\n                           <input type = \"text\"\n                               onChange ={this.searchHandler}\n                               value = {term}\n                           />\n                       </form>\n              {\n                data.filter(searchingFor(term)).map(data =>\n                    <div key = {data.user}>\n                          <center>\n                                <ul className = \"list-group\">\n                                    <li className = \"list-group-item\">\n                                        {data.user} |\n                                        {data.post_content} |\n                                        {data.category}\n                                    </li>\n                                 </ul>\n                          </center>\n\n                    </div>\n                )\n              }\n              </div>\n    );\n  }\n}\n\nexport default All;"]},"metadata":{},"sourceType":"module"}