{"ast":null,"code":"import _defineProperty from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/Post.js\";\nimport React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl } from 'react-bootstrap';\nimport '../styles/Post.css';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post).call(this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      id: '',\n      username: '',\n      description: '',\n      category: ''\n    };\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handlePost\",\n    value: function handlePost(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var data = new FormData(event.target); //generate unique ID here for tagging purposes, consider adding string???\n\n      this.state.id = Math.floor(Math.random() * 1000000 + 1);\n      var user = this.refs.username.value.trim();\n      var des = this.refs.description.value.trim();\n      var cat = this.refs.category.value.trim(); //if empty and click submit, throw error\n\n      if (!user || !des || !cat) {\n        alert('Form not filled out properly');\n        return;\n      }\n\n      alert('Form being sent to backend'); //    //modifying html\n      //    document.getElementById(\"post\").innerHTML = user + \"  |   \" + des + \"   |   \" + cat;\n      //\n      //resetting the post fields\n\n      this.refs.username.value = '';\n      this.refs.description.value = '';\n      this.refs.category.value = ''; //when we build backend, will put url of backend here\n\n      fetch('/api/form-submit-url', {\n        method: 'POST',\n        body: data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return (//This will send data in a json format containing username, description and category\n        React.createElement(\"div\", {\n          className: \"post-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Enter Name: \"), React.createElement(\"input\", {\n          ref: \"username\",\n          name: \"username\",\n          placeholder: \"Ex: Isaac's puppy\",\n          type: \"text\",\n          value: this.state.username,\n          onChange: function onChange(event) {\n            return _this2.handleChange(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Enter description of event: \"), React.createElement(\"input\", {\n          ref: \"description\",\n          id: \"description\",\n          placeholder: \"Ex: 5v5 pickup\",\n          name: \"description\",\n          type: \"text\",\n          value: this.state.description,\n          onChange: function onChange(event) {\n            return _this2.handleChange(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Enter category: \"), React.createElement(\"input\", {\n          ref: \"category\",\n          id: \"category\",\n          placeholder: \"Ex: Sports\",\n          name: \"category\",\n          type: \"text\",\n          value: this.state.category,\n          onChange: function onChange(event) {\n            return _this2.handleChange(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Create Post\"))))\n      );\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport default Post;","map":{"version":3,"sources":["/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/Post.js"],"names":["React","Component","FormGroup","ControlLabel","FormControl","Post","handleSubmit","bind","state","id","username","description","category","event","setState","target","name","value","preventDefault","data","FormData","Math","floor","random","user","refs","trim","des","cat","alert","fetch","method","body","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {FormGroup, ControlLabel, FormControl} from 'react-bootstrap';\nimport '../styles/Post.css';\nclass Post extends Component {\n\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n        id: '',\n        username: '',\n        description: '',\n        category: '',\n    }\n  }\n\n  handleChange (event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handlePost(event){\n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n\n    //generate unique ID here for tagging purposes, consider adding string???\n    this.state.id = Math.floor((Math.random() * 1000000) + 1)\n\n    var user = this.refs.username.value.trim();\n    var des = this.refs.description.value.trim();\n    var cat = this.refs.category.value.trim();\n\n    //if empty and click submit, throw error\n    if (!user || !des || !cat){\n        alert('Form not filled out properly');\n        return;\n    }\n\n    alert('Form being sent to backend');\n\n//    //modifying html\n//    document.getElementById(\"post\").innerHTML = user + \"  |   \" + des + \"   |   \" + cat;\n//\n    //resetting the post fields\n    this.refs.username.value = '';\n    this.refs.description.value = '';\n    this.refs.category.value = '';\n\n    //when we build backend, will put url of backend here\n    fetch('/api/form-submit-url', {\n      method: 'POST',\n      body: data,\n    });\n  }\n\n\n  render() {\n    return (\n        //This will send data in a json format containing username, description and category\n    <div className=\"post-container\">\n      <div className=\"input-container\">\n        <form onSubmit={this.handleSubmit}>\n\n          <div className=\"field\">\n            <label htmlFor=\"username\">Enter Name: </label>\n            <input ref = \"username\" name=\"username\" placeholder=\"Ex: Isaac's puppy\" type=\"text\" value = {this.state.username} onChange={event => this.handleChange(event)}/>\n          </div>\n\n          <div className=\"field\">\n            <label htmlFor=\"description\">Enter description of event: </label>\n            <input ref = \"description\" id=\"description\" placeholder=\"Ex: 5v5 pickup\" name=\"description\" type=\"text\" value = {this.state.description} onChange={event => this.handleChange(event)}/>\n          </div>\n\n          <div className=\"field\">\n            <label htmlFor=\"category\">Enter category: </label>\n            <input ref =\"category\" id=\"category\" placeholder=\"Ex: Sports\" name=\"category\" type=\"text\" value = {this.state.category} onChange={event => this.handleChange(event)}/>\n          </div>\n\n          <button onClick={this.handleSubmit}>Create Post</button>\n        </form>\n      </div>\n\n\n{/*\n//      <center>\n//          <table>\n//              <td>Username |</td>\n//              <td>Description |</td>\n//              <td>Category </td>\n//          </table>\n//            <table>\n//              <td id = \"post\"></td>\n//          </table>\n      </center>\n      */}\n    </div>\n    );\n  }\n\n\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}