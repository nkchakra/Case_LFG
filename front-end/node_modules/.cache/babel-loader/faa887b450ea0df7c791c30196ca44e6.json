{"ast":null,"code":"import _classCallCheck from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/Feed.js\";\nimport React, { Component } from 'react';\nimport { Tab, Tabs } from 'react-bootstrap';\n\nfunction categorize(term) {\n  console.log(\"derp\");\n  return function (x) {\n    var table = '';\n\n    if (x.category.toLowerCase().includes(term.toLowerCase())) {\n      return table += x.username + \": \" + x.description;\n    }\n  };\n}\n\nvar Feed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Feed, _Component);\n\n  //framework of getting data using ajax\n  //    getData(){\n  //      $.ajax(\n  //            {\n  //                type: 'get',\n  //                url: url,\n  //                success: function (data) {\n  //                    this.setState({ data: JSON.parse(data) })  //or parse\n  //                }.bind(this)\n  //            },\n  //\n  //        );\n  //    }\n  function Feed() {\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Feed).call(this));\n    _this.state = {\n      data: [{\n        \"username\": \"byrrice\",\n        \"date_posted\": \"08/21/18 7pm\",\n        \"post_id\": \"2131\",\n        \"description\": \"Looking for basketball group at 7 pm\",\n        \"category\": \"Sports\",\n        \"time_posted\": \"6:21pm\",\n        \"time_exist\": \"2 hours\",\n        \"Images\": \"None\",\n        \"Links\": \"https://en.wikipedia.org/wiki/Basketball\",\n        \"Tag_List\": \"Baketball, group, Veale\",\n        \"comments\": {\n          \"usernames\": \"vishthefish, niknak\",\n          \"comment_ids\": \"23141, 32141\"\n        }\n      }]\n    }; //for posting method later on\n    //this.getData = this.getData.bind(this);\n\n    return _this;\n  } //will recieve data from backend here, for now using dummy response object I created\n  //ideally will be more formatted than this when website goes on\n\n\n  _createClass(Feed, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main-feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        size: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Main Feed\"), React.createElement(Tabs, {\n        defaultActiveKey: 1,\n        animation: false,\n        id: \"noanim-tab-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: 1,\n        title: \"All\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Tab 1 content\"), React.createElement(Tab, {\n        eventKey: 2,\n        title: \"Sports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Tab 2 content\"), React.createElement(Tab, {\n        eventKey: 3,\n        title: \"Videogames\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Tab 3 content\"), React.createElement(Tab, {\n        eventKey: 4,\n        title: \"Misc.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Tab 4 content\"))));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["/Users/Vishal/Documents/EECS395_Senior_Proj/eecs395_fall2018_lfg/front-end/src/Components/Feed.js"],"names":["React","Component","Tab","Tabs","categorize","term","console","log","x","table","category","toLowerCase","includes","username","description","Feed","state","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,iBAAxB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAO,UAASC,CAAT,EAAW;AAEd,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAID,CAAC,CAACE,QAAF,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCP,IAAI,CAACM,WAAL,EAAlC,CAAJ,EAA0D;AACtD,aAAOF,KAAK,IAAID,CAAC,CAACK,QAAF,GAAa,IAAb,GAAqBL,CAAC,CAACM,WAAvC;AACH;AACJ,GAND;AAOH;;IAEKC,I;;;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,kBAAa;AAAA;;AAAA;;AACT;AACE,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CAAC;AACG,oBAAW,SADd;AAEG,uBAAc,cAFjB;AAGG,mBAAU,MAHb;AAIG,uBAAc,sCAJjB;AAKG,oBAAW,QALd;AAMG,uBAAc,QANjB;AAOG,sBAAa,SAPhB;AAQG,kBAAU,MARb;AASG,iBAAQ,0CATX;AAUG,oBAAY,yBAVf;AAWG,oBAAY;AACR,uBAAa,qBADL;AAER,yBAAe;AAFP;AAXf,OAAD;AADK,KAAb,CAFO,CAqBP;AACC;;AAtBM;AAuBV,G,CACH;AACA;;;;;6BACU;AAEP,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,IAAI,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAE,CAAxB;AAA2B,QAAA,SAAS,EAAE,KAAtC;AAA6C,QAAA,EAAE,EAAC,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAIE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,EAOE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,EAUE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVF,CAFA,CADA,CADJ;AA4CD;;;;EAzFgBhB,S;;AA4FnB,eAAec,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Tab, Tabs} from 'react-bootstrap';\n\nfunction categorize(term){\n    console.log(\"derp\");\n    return function(x){\n\n        var table = '';\n        if (x.category.toLowerCase().includes(term.toLowerCase())){\n            return table += x.username + \": \" +  x.description;\n        }\n    }\n}\n\nclass Feed extends Component {\n\n\n//framework of getting data using ajax\n//    getData(){\n//      $.ajax(\n//            {\n//                type: 'get',\n//                url: url,\n//                success: function (data) {\n//                    this.setState({ data: JSON.parse(data) })  //or parse\n//                }.bind(this)\n//            },\n//\n//        );\n//    }\n\n constructor(){\n     super()\n       this.state = {\n         data: [{\n                   \"username\":\"byrrice\",\n                   \"date_posted\":\"08/21/18 7pm\",\n                   \"post_id\":\"2131\",\n                   \"description\":\"Looking for basketball group at 7 pm\",\n                   \"category\":\"Sports\",\n                   \"time_posted\":\"6:21pm\",\n                   \"time_exist\":\"2 hours\",\n                   \"Images\": \"None\",\n                   \"Links\":\"https://en.wikipedia.org/wiki/Basketball\",\n                   \"Tag_List\": \"Baketball, group, Veale\",\n                   \"comments\": {\n                       \"usernames\": \"vishthefish, niknak\",\n                       \"comment_ids\": \"23141, 32141\"\n                   }\n                }]\n       };\n\n       //for posting method later on\n        //this.getData = this.getData.bind(this);\n   }\n //will recieve data from backend here, for now using dummy response object I created\n //ideally will be more formatted than this when website goes on\n  render() {\n\n    return (\n        <div className=\"main-feed\">\n        <center>\n        <h1 size=\"30\">Main Feed</h1>\n        <Tabs defaultActiveKey={1} animation={false} id=\"noanim-tab-example\">\n          <Tab eventKey={1} title=\"All\">\n            Tab 1 content\n          </Tab>\n          <Tab eventKey={2} title=\"Sports\">\n            Tab 2 content\n          </Tab>\n          <Tab eventKey={3} title=\"Videogames\">\n            Tab 3 content\n          </Tab>\n          <Tab eventKey={4} title=\"Misc.\">\n            Tab 4 content\n          </Tab>\n        </Tabs>\n\n          {/*<ul  className = \"list-group\">{this.state.data.map(function(item, key) {\n                   return (\n                   <div>\n                      <h1 size = \"20\">Main Feed</h1>\n                       <div class=\"row\">\n                         <div class=\"column1\">\n                           <h2>Sports</h2>\n                           {categorize(\"Sports\")}\n                         </div>\n                         <div class=\"column2\">\n                           <h2>Videogames</h2>\n                           {categorize(\"Videogames\")}\n                         </div>\n                         <div class=\"column1\">\n                           <h2>Miscellaneous</h2>\n                           {categorize(\"Misc\")}\n                         </div>\n                       </div>\n                   </div>\n                    )\n\n                 })}</ul>*/}\n        </center>\n        </div>\n    );\n  }\n}\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}